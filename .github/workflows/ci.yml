name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/development.txt

    - name: Lint with flake8
      run: |
        flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 app/ --count --max-complexity=10 --max-line-length=100 --statistics

    - name: Check code formatting with black
      run: black --check app/

    - name: Check import sorting with isort
      run: isort --check-only app/

    - name: Type check with mypy
      run: mypy app/ --ignore-missing-imports

    - name: Test with pytest
      env:
        REDIS_URL: redis://localhost:6379/15
        OPENAI_API_KEY: test-key
        SECRET_KEY: test-secret
        ENVIRONMENT: test
      run: |
        pytest tests/ -v --cov=app --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build API image
      run: |
        docker build -f docker/Dockerfile.api -t sketchdojo-api:test .

    - name: Build Worker image
      run: |
        docker build -f docker/Dockerfile.worker -t sketchdojo-worker:test .

    - name: Test Docker images
      run: |
        docker run --rm sketchdojo-api:test python -c "import app; print('API image OK')"
        docker run --rm sketchdojo-worker:test python -c "import app; print('Worker image OK')"
